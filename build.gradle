plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.1'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.5.10'
	id 'org.jetbrains.kotlin.jvm' version '1.8.0-RC2'
}

group = 'ru.scarlet'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.amqp:spring-rabbit-test'
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.4.2'
}

tasks.named('test') {
	useJUnitPlatform()
}

task StartService(type: Exec){
	group = 'Docker Services'
	description = 'Start RabbitMQ service'

	commandLine  'docker-compose', 'up', '-d'
}

task StopService(type: Exec){
	group = 'Docker Services'
	description = 'Stop RabbitMQ service'

	commandLine  'docker-compose', 'down'
}
def env = project.hasProperty('env') ? project.env : 'local'

if (env == 'local') {
	bootRun.dependsOn(StartService)
}
compileKotlin {
	kotlinOptions {
		jvmTarget = "1.8"
	}
}
compileTestKotlin {
	kotlinOptions {
		jvmTarget = "1.8"
	}
}
